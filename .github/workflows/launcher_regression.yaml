name: Launcher Regression

on:
    workflow_dispatch:
        inputs:
            launcher_url_version:
                description: 'Specific launcher version to get the correct URL'
                required: true
                default: 'v1'
                type: choice
                options:
                  - v1
                  - v2
                  - v3
            backend_env:
                description: 'Backend environment to run tests against'
                required: true
                default: 'Multilogin EU'
                type: choice
                options:
                    - DEV
                    - QA
                    - STAGING-EU
                    - Multilogin EU
                    - INDIGO_PROD
                    - INDIGO_DEV
                    - MLX_LT
            bucket: 
                description: 'Select the S3 bucket'
                required: true
                default: 'PROD'
                type: choice
                options:
                    - DEV
                    - PROD
            adapter_version:
                description: 'Adapter version from s3'
                required: true
                default: 1.2.0 # Latest as of 02.2025
                type: string  
            launcher_build:
                description: 'Select the build version'
                required: true
                default: 'latest-build'
jobs:
    test:
        runs-on: ubuntu-latest
        environment: ${{ inputs.backend_env }}
        env:
            EMAIL: ${{ vars.EMAIL }}
            PASSWORD: ${{ vars.PASSWORD }}
            ENV: ${{ inputs.backend_env }}
            LAUNCHER_VER: ${{ inputs.launcher_url_version }}        
        steps:
        - uses: actions/checkout@v3
        
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.12'
            cache: 'pip'
            cache-dependency-path: requirements.txt

        - name: Install dependencies
          run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

        - name: Cache Adapter Binary
          id: cache-adapter
          uses: actions/cache@v4
          with:
            path: /home/runner/mlx/deps/adapter_tester
            key: adapter-${{ inputs.adapter_version }}
            
        - name: Set up Adapter
          if: steps.cache-adapter.outputs.cache-hit != 'true'  # Only run if not cached
          run: |
            set -e
            ADAPTER_DIR=/home/runner/mlx/deps/adapter_tester
            mkdir -p $ADAPTER_DIR
            wget https://ml000x-dev-dists.s3.eu-north-1.amazonaws.com/adapter_tester/${{ inputs.adapter_version }}/linux/adapter-amd64.bin -O $ADAPTER_DIR/adapter.bin
            chmod +x $ADAPTER_DIR/adapter.bin
            echo "1.0" > $ADAPTER_DIR/VERSION
        
        - name: Set up Launcher
          run: |
                set -e
                LAUNCHER_DIR=/home/runner/mlx/deps/launcher
                mkdir -p $LAUNCHER_DIR
                if [[ "${{ inputs.bucket }}" == 'DEV' ]]; then
                LAUNCHER_URL="https://ml000x-dev-dists.s3.eu-north-1.amazonaws.com/launcher-mlx"
                echo "Downloading DEV Launcher ${{ inputs.launcher_build }}"
                else
                LAUNCHER_URL="https://mlxdists.s3.eu-west-3.amazonaws.com/launcher"
                echo "Downloading PROD Launcher ${{ inputs.launcher_build }}"
                fi
                wget $LAUNCHER_URL/${{ inputs.launcher_build }}/launcher-linux_amd64.bin -O $LAUNCHER_DIR/launcher.bin
                chmod +x $LAUNCHER_DIR/launcher.bin
        
        - name: Start Launcher
          run: |
                set -e
                export ADAPTER_TESTER=1
                echo "Starting Launcher"
                if [[ $ENV == 'Multilogin EU' ]]; then
                /home/runner/mlx/deps/launcher/launcher.bin &
                else
                GW_ENV="${ENV,,}" # Make it lower
                /home/runner/mlx/deps/launcher/launcher.bin -gw-env=$GW_ENV &
                fi
                echo "Launcher started"
        
        - name: Start test
          run:  |
                set -e
                pytest tests/test_launcher_regression.py --html=report.html --self-contained-html

        - name: Check if log file exists
          id: check_log
          run: |
            if ls /home/runner/mlx/logs/launcher_* 1> /dev/null 2>&1; then
              echo "exists=true" >> $GITHUB_ENV
            else
              echo "exists=false" >> $GITHUB_ENV
            fi

        - name: Upload Log File as Artifact
          if: env.exists == 'true'
          uses: actions/upload-artifact@v4
          with:
            name: launcher-logs
            path: ~/mlx/logs/launcher_*

        - name: Upload HTML Report as Artifact
          uses: actions/upload-artifact@v4
          with:
                name: pytest-report
                path: report.html